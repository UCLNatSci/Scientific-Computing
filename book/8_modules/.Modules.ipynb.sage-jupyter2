{"backend_state":"init","connection_file":"/tmp/xdg-runtime-user/jupyter/kernel-21061778-7f02-4a55-8dff-02bac69c52a5.json","kernel":"python3","kernel_error":"","kernel_state":"idle","kernel_usage":{"cpu":0,"memory":0},"trust":true,"type":"settings"}
{"cell_type":"code","exec_count":2,"id":"1541e7","input":"turtle.start() # call start function defined in turtle.py\nturtle.draw_forward(1) # call draw_forward function defined in turtle.py","output":{"0":{"data":{"image/png":"a9b0f9b3e3fff2a07f49a9a744cb88051f2bceec","text/plain":"<Figure size 360x360 with 1 Axes>"},"exec_count":2,"metadata":{"image/png":{"height":306,"width":332},"needs_background":"light"},"output_type":"execute_result"}},"pos":3,"type":"cell"}
{"cell_type":"code","exec_count":3,"id":"59959c","input":"import turtle","pos":1,"type":"cell"}
{"cell_type":"markdown","id":"3858fb","input":"## Modularising Code\n\nModules are useful for breaking a large program into smaller parts. For example, the `.ipynb` file could contain only code suitable for presentation, with other code relegated to functions defined in `.py` files.\n\nBecause functions must be imported before being used, it is common practice to gather together all `import` statements at the top of the notebook file.\n\n```\nimport numpy as np\nimport turtle\n\n# rest of code goes here...\n```\n","pos":4,"type":"cell"}
{"cell_type":"markdown","id":"3dd33a","input":"# Modules\n\nA **module** is a file with a `.py` extension which contains Python code. The code can be **imported** from the module using the Python `import` statement.\n\nFirst, create a new file called `turtle.py` and paste in the following code:\n\n```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# function definitions\n\ndef start():\n    state[0] = 0\n    state[1] = 0\n    state[2] = 0\n    \n    plt.figure(figsize=(5,5))\n    plt.xlim(-2, 2)\n    plt.ylim(-2, 2)\n    \ndef draw_forward(dis):\n    x = state[0]\n    y = state[1]\n    angle = state[2]\n    state[0] = x + dis * np.cos(angle)\n    state[1] = y + dis * np.sin(angle)\n    plt.plot([x, state[0]], [y, state[1]], color=\"black\", linewidth=2)\n    \ndef rotate_left(theta):\n    state[2] = state[2] + theta * np.pi / 180\n    \nstate = [0, 0, 0]\n```\n\nThis defines a module called `turtle`.\n\nNext, create a notebook (with `.ipynb` extension) and enter the following code. The `py` file and the `ipynb` files must be in the same folder.","pos":0,"type":"cell"}
{"cell_type":"markdown","id":"7ade65","input":"This statement imports the module `turtle` which is defined in the file `turtle.py` contained in the same folder as the notebook. When the Python interpreter executes this statement, it reads and executes the code contained in the file.\n\nAny functions or variables defined in the module `turtle` can now be accessed from this notebook using the prefix `turtle.`. For example, the function `start()` defined in `turtle.py` can be called using `turtle.start()`:","pos":2,"type":"cell"}
{"id":0,"time":1643234954204,"type":"user"}
{"last_load":1643234954930,"type":"file"}